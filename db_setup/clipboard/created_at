created_at

------

DO
$do$
DECLARE
  f_schema text;
BEGIN

FOR f_schema IN
    SELECT quote_ident(nspname)
    FROM   pg_namespace n
    WHERE  nspname !~~ 'pg_%'
    AND    nspname <>  'information_schema'
    AND    nspname <> 'xdb'
    AND    nspname <> 'c'
    AND    nspname <> 'e'
    AND    nspname <> 'migration'
    AND    nspname <> 'public'
LOOP
   EXECUTE 'SET LOCAL search_path = ' || f_schema;
    ALTER TABLE messages
        DROP COLUMN IF EXISTS last_edit_at,
        DROP COLUMN IF EXISTS created_at,
        DROP COLUMN IF EXISTS edit_count;
    DROP TRIGGER IF EXISTS set_last_edit_at ON messages;
END LOOP;

END
$do$

-----

DO
$do$
DECLARE
  f_schema text;
BEGIN
FOR f_schema IN
    SELECT quote_ident(nspname)
    FROM   pg_namespace n
    WHERE  nspname !~~ 'pg_%'
    AND    nspname <> 'information_schema'
    AND    nspname <> 'xdb'
    AND    nspname <> 'c'
    AND    nspname <> 'e'
    AND    nspname <> 'migration'
    AND    nspname <> 'public'
LOOP
   EXECUTE 'SET LOCAL search_path = ' || f_schema;

     DROP TRIGGER IF EXISTS set_last_edit_at
     ON messages;

     ALTER TABLE messages
        ADD COLUMN IF NOT EXISTS created_at timestamp without time zone not null default timezone('utc'::text, now()),
        ADD COLUMN IF NOT EXISTS last_edit_at timestamp without time zone not null default timezone('utc'::text, now()),
        ADD COLUMN IF NOT EXISTS edit_count int not null default 0;

     UPDATE messages
        SET mdate = cdate where mdate is null and cdate is not null;

     UPDATE messages SET created_at = cdate;
     UPDATE messages SET last_edit_at = mdate;
     UPDATE messages SET edit_count = 1 where last_edit_at <> created_at;

     CREATE TRIGGER set_last_edit_at
     BEFORE UPDATE ON messages
     FOR EACH ROW
     EXECUTE PROCEDURE trigger_set_last_edit_at();

END LOOP;
END
$do$

---- prolong_count - expires_at


DO
$do$
DECLARE
  f_schema text;
BEGIN
FOR f_schema IN
    SELECT quote_ident(nspname)
    FROM   pg_namespace n
    WHERE  nspname !~~ 'pg_%'
    AND    nspname <> 'information_schema'
    AND    nspname <> 'xdb'
    AND    nspname <> 'c'
    AND    nspname <> 'e'
    AND    nspname <> 'migration'
    AND    nspname <> 'public'
LOOP
   EXECUTE 'SET LOCAL search_path = ' || f_schema;

     ALTER TABLE messages
        ADD COLUMN IF NOT EXISTS expires_at timestamp without time zone,
        ADD COLUMN IF NOT EXISTS prolong_count int not null default 0;

     UPDATE messages
        SET expires_at = validity;

     CREATE OR REPLACE FUNCTION trigger_inc_prolong_count()
     RETURNS TRIGGER AS $$
     BEGIN
     NEW.prolong_count := OLD.prolong_count + 1;
     RETURN NEW;
     END;
     $$ LANGUAGE plpgsql;

     CREATE TRIGGER inc_prolong_count
     BEFORE UPDATE OF expires_at ON messages
     FOR EACH ROW
     EXECUTE PROCEDURE trigger_inc_prolong_count();

END LOOP;
END
$do$
