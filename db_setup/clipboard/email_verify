
DO
$do$
DECLARE
  f_schema text;
BEGIN
FOR f_schema IN
    SELECT quote_ident(nspname)
    FROM   pg_namespace n
    WHERE  nspname !~~ 'pg_%'
    AND    nspname <> 'information_schema'
    AND    nspname <> 'xdb'
    AND    nspname <> 'c'
    AND    nspname <> 'e'
    AND    nspname <> 'migration'
    AND    nspname <> 'public'
LOOP
     EXECUTE 'SET LOCAL search_path = ' || f_schema;
     DROP TABLE email_verify CASCADE;
END LOOP;
END
$do$
;

----- CREATE email_verify

DO
$do$
DECLARE
  f_schema text;
BEGIN
FOR f_schema IN
    SELECT quote_ident(nspname)
    FROM   pg_namespace n
    WHERE  nspname !~~ 'pg_%'
    AND    nspname <> 'information_schema'
    AND    nspname <> 'xdb'
    AND    nspname <> 'c'
    AND    nspname <> 'e'
    AND    nspname <> 'migration'
    AND    nspname <> 'public'
LOOP
   EXECUTE 'SET LOCAL search_path = ' || f_schema;

     create table if not exists email_verify (
          id serial primary key not null,
          created_at timestamp without time zone not null default timezone('utc'::text, now()),
          email text not null,
          token text,
          source text);
END LOOP;
END
$do$
;

----- insert email verify

DO
$do$
DECLARE
  f_schema text;
BEGIN
FOR f_schema IN
    SELECT quote_ident(nspname)
    FROM   pg_namespace n
    WHERE  nspname !~~ 'pg_%'
    AND    nspname <> 'information_schema'
    AND    nspname <> 'xdb'
    AND    nspname <> 'c'
    AND    nspname <> 'e'
    AND    nspname <> 'migration'
    AND    nspname <> 'public'
LOOP
     EXECUTE 'SET LOCAL search_path = ' || f_schema;

     INSERT INTO email_verify(created_at, email, token, source)

SELECT ts, eland_id, nullif(data->>'token', ''),
nullif(coalesce(data->>'source', data->>'script_name'), '')

          FROM xdb.events
          WHERE agg_schema = f_schema
               AND agg_type = 'email_validated'
          ORDER BY ts ASC;
END LOOP;
END
$do$
;
