parameters:
    router.request_context.host: '%env(APP_HOST)%'
    router.request_context.scheme: '%env(APP_SCHEME)%'
    app.default_locale: nl
    app.locales: en|nl
    env(GIT_REV): ''
    assert.thumbprint: '[a-f0-9-]{8}'
    assert.token: '[a-z0-9-]{12}'
    assert.big_token: '[a-z0-9-]{20}'
    assert.system: '[a-z][a-z0-9]*'
    assert.schema: '[a-z][a-z0-9]*'
    assert.route: '[a-z_]+'
    assert.role_short.guest: '[gua]'
    assert.role_short.user: '[ua]'
    assert.role_short.admin: 'a'
    assert.id: \d++
    assert.view: 'extended|list|map|tiles'
    assert.account_status: 'active|new|leaving|inactive|im|ip|extern|all'
    assert.account_status.primary: 'active|inactive|im|ip|extern'
    assert.message_image: '[a-z][a-z0-9]*_m_\d+_[a-f0-9]{40}'
    assert.image_ext: 'jpg|png|gif|svg'
    assert.year: ^(19|20)[0-9]{2}$
    assert.month: ^[1-9]|1[012]$

services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            $env_map_access_token: '%env(MAP_ACCESS_TOKEN)%'
            $env_map_tiles_url: '%env(MAP_TILES_URL)%'
            $env_legacy_eland_origin_pattern: '%env(LEGACY_ELAND_ORIGIN_PATTERN)%'
            $env_aws_s3_bucket: '%env(AWS_S3_BUCKET)%'
            $env_aws_s3_region: '%env(AWS_S3_REGION)%'
            $env_s3_url: 'https://s3.%env(AWS_S3_REGION)%.amazonaws.com/%env(AWS_S3_BUCKET)%/'
            $env_mail_noreply_address: '%env(MAIL_NOREPLY_ADDRESS)%'
            $env_mail_from_address: '%env(MAIL_FROM_ADDRESS)%'
            $env_mail_hoster_address: '%env(MAIL_HOSTER_ADDRESS)%'
            $env_smtp_host: '%env(SMTP_HOST)%'
            $env_smtp_port: '%env(SMTP_PORT)%'
            $env_smtp_username: '%env(SMTP_USERNAME)%'
            $env_smtp_password: '%env(SMTP_PASSWORD)%'
            $env_master_password: '%env(base64:MASTER_PASSWORD)%'
            $env_mollie_test_api_key: '%env(MOLLIE_TEST_API_KEY)%'
            $env_geo_block: '%env(GEO_BLOCK)%'
            $env_geo_rm_error: '%env(GEO_RM_ERROR)%'
            $env_app_host: '%env(APP_HOST)%'
            $env_app_scheme: '%env(APP_SCHEME)%'
            $env_app_init_enabled: '%env(APP_INIT_ENABLED)%'
            $env_app_system_redirects: '%env(base64:APP_SYSTEM_REDIRECTS)%'
            $env_database_url: '%env(DATABASE_URL)%'
            $project_dir: '%kernel.project_dir%'
            $cache_dir: '%kernel.cache_dir%'

    App\:
        resource: '../src/*'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    _instanceof:
        App\SchemaTask\SchemaTaskInterface:
            tags: ['app.schema_task']

    App\SchemaTask\SchemaTaskCollection:
        arguments: [!tagged {tag: 'app.schema_task'}]

    App\Service\SessionUserService:
        lazy: true

    App\Service\PageParamsService:
        lazy: true

    Redis: '@snc_redis.default'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@snc_redis.default'
            - {prefix: session_, ttl: 864000}

    Bramus\Monolog\Formatter\ColoredLineFormatter: ~

    App\Monolog\ElandProcessor:
        tags:
           - {name: 'monolog.processor', channel: 'app'}
